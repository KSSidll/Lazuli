@page "/auth/login"
@layout AuthLayout

@implements IDisposable

@inject NavigationManager NavigationManager
@inject IDbContextFactory<UserContext> UserDbFactory
@inject AuthenticationStateProvider authStateProvider

<PageTitle>Login</PageTitle>

<EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="row text-center text-white mb-4">
            <h2>Log in</h2>
        </div>
        <div class="row justify-content-center m-3">
            <InputText class="p-3 text-white" id="login" @bind-Value="loginModel.Login" placeholder=" Login"/>
        </div>
        <div class="row justify-content-center m-3">
            <InputText class="p-3 text-white" type="password" id="password" @bind-Value="loginModel.Password" placeholder=" Password" />
        </div>
        <div class="row justify-content-center m-3 mt-5">
            <button class="p-2 submit" type="submit">Log in</button>
        </div>
        <div class="row text-white mt-5">
            <p>
                Don't have an account?
                <a class="nav-to-signup" href="" @onclick="NavigateToSignup" @onclick:preventDefault>Sign up</a>
            </p>
        </div>
    </div>

</EditForm>

@code {
    protected override async Task OnInitializedAsync()
    {
        userContext = UserDbFactory.CreateDbContext();

        // check if user is authenticated
        var userAuthStateProvider = (UserAuthenticationStateProvider)authStateProvider;

        if (await userAuthStateProvider.IsAuthenticated())
            NavigationManager.NavigateTo("/");
    }

    private LoginModel loginModel = new();
    private UserContext? userContext;

    private async void HandleLogin()
    {
        if (loginModel.Login is null || loginModel.Password is null)
            throw new InvalidOperationException("HandleLogin was called without login form being filled, DataAnnotationsValidator failed");

        if (userContext is null)
            throw new InvalidOperationException("userContext is null in HandleLogin method, which shouldn't be possible");

        var user = userContext.GetUser(loginModel.Login, loginModel.Password);

        // TODO add message when there is no user that matches provided credentials in the database
        if (user is null) return;

        // update authentication status and navigate to index/controller page
        var userAuthStateProvider = (UserAuthenticationStateProvider) authStateProvider;

        await userAuthStateProvider.Login(user.BoundToUserId);

        NavigationManager.NavigateTo("/");
    }

    private void NavigateToSignup()
    {
        NavigationManager.NavigateTo("/auth/signup");
    }

    public void Dispose()
    {
        userContext?.Dispose();
    }
}
