@page "/auth/signup"
@layout AuthLayout
@inject ILogger<Signup> Logger
@inject NavigationManager NavigationManager

<PageTitle>Signup</PageTitle>

<EditForm Model="@signupModel" OnValidSubmit="@HandleSignup">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="row text-center text-white mb-4">
            <h2>Sign up</h2>
        </div>
        <div class="row justify-content-center m-3">
            <InputText class="p-3 text-white" id="login" @bind-Value="signupModel.Login" placeholder=" Login"/>
        </div>
        <div class="row justify-content-center m-3">
            <InputText class="p-3 text-white" type="password" id="password" @bind-Value="signupModel.Password" placeholder=" Password" />
        </div>
        <div class="row justify-content-center m-3 mt-5">
            <button class="p-2 submit" type="submit">Sign up</button>
        </div>
        <div class="row text-white mt-5">
            <p>
                Have an account already?
                <a class="nav-to-login" href="" @onclick="NavigateToLogin" @onclick:preventDefault>Log in</a>
            </p>
        </div>
    </div>

</EditForm>

@code {
    protected override void OnInitialized()
    {
        // TODO check if logged in
    }

    private SignupModel signupModel = new();

    private void HandleSignup()
    {
        Logger.LogInformation("HandleSignup called");

        Logger.LogInformation("HandleSignup Login: " + signupModel.Login);
        Logger.LogInformation("HandleSignup Password: " + signupModel.Password);

    }

    private void NavigateToLogin()
    {
        Logger.LogInformation("NavigateToLogin called in Signup");
        NavigationManager.NavigateTo("/auth/login");
    }
}
