@page "/posts"

@inherits MainLayout

@inject IUserEndpoint userEndpoint
@inject IPostEndpoint postEndpoint
@inject ICommentEndpoint commentEndpoint

<div class="mb-3">
	<FilterByComponent />

	@if (Posts is not null && _loadingData == false) 
	{
		@foreach (var post in Posts)
		{
			<div class="border border-dark m-0 p-3 bg-black text-white border-top-0">
				<PostComponent Post="post" />
			</div>
		}
		
		<div class="container text-center">
			@if (_loadedAllContent == false)
			{
				<button class="btn btn-outline-primary btn-lg mt-2" @onclick="LoadNextData">
					Load More Content
				</button>
			}
			else
			{
				<button class="btn btn-outline-danger btn-lg mt-2" disabled>
					No more content
				</button>
			}
		</div>
		
	}
	else if (_loadingData)
	{
		<div class="d-flex align-items-center">
			<strong>Loading...</strong>
			<div class="spinner-border ms-auto" role="status" aria-hidden="true"></div>
		</div>
	}
</div>

@code {
	private bool _loadingData = false;
	private bool _loadedAllContent = false;

	public List<PostViewModel>? Posts { get; set; }

	protected override async Task OnInitializedAsync()
	{
		_loadingData = true;

		var posts = await postEndpoint.GetPartially();

		if (posts.Count == 0)
		{
			_loadedAllContent = true;
		}

		Posts = await ConvertToViewModel(posts);

		_loadingData = false;
	}

	private async Task<List<PostViewModel>> ConvertToViewModel(List<PostModel> posts)
	{
		var output = new List<PostViewModel>();

		foreach (var post in posts)
		{
			var postView = new PostViewModel
			{
				Id = post.Id,
				Title = post.Title,
				Body = post.Body,
				UserId = post.UserId
			};

			postView.Username = (await userEndpoint.GetByUserId(postView.UserId))?.Username;
			var comments = await commentEndpoint.GetByPostId(postView.Id);
			postView.Comments = new(comments.Select(x => new CommentViewModel() 
			{
				Email = x.Email,
				Id = x.Id,
				Body = x.Body
			}));

			output.Add(postView);
		}

		return output.OrderBy(x => Random.Shared.NextDouble()).ToList();
	}

	private async Task LoadNextData()
	{
		if (Posts is null)
		{
			Posts = new();
		}

		var newPosts = await postEndpoint.GetPartially();

		if (newPosts.Count == 0)
		{
			_loadedAllContent = true;
		}

		var converted = await ConvertToViewModel(newPosts);
		
		Posts.AddRange(converted);
	}

}